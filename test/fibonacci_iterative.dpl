#include <std.dpl>
#define TEST

struct hello {
	a: int;
	b: int;
}

enum E {
	HIGH,
	LOW
}

#namespace TEST
namespace SUB_TEST;

struct hi {
	a: int;
	b: int;
}

spacename;
#spacename

fn return2:<T>(i: T): T {
	let tmp: T;
	return i;
}

fn test(): void {}

const some_const: int = 1;

struct S:<T, U, V> {
	a: T;
}

fn main(): int {
	/*
	Probably not the most beautiful fib code you've ever seen
	but have you ever written one in your own language? Hm? Didn't think so.
	*/

	let n: int = 10;
	let a: int = 0;
	let b: int = 1;

	if n == 0 return a;
	else if n == 1 return b;

	n -= 2;		// We already cover 0 and 1 in the if else above
	let c: int;	// Uninitialized variables default to 0
	let i: int;
	for(i = 0; i <= n; i= ++i){
		c = b + a;
		a = b;
		b = c;
	}

	loop {};
	let x: float = 0.000;
	let y: int = 0b00000000;
	let z: int = 0x00000000;
	let w: bool = false;
	let s: str = "Hello, world!";
	let arr[5]: array[int] = [1, 2, 3, 4, 5];
	let c: char = 'abc';

	return2:<int>(1);
	let s1: S:<int, int, int> = S:<int, int, int>{a:1};
	return2:<S:<int>>(s1);

	let s2: TEST::SUB_TEST::hi = TEST::SUB_TEST::hi{a:1, b:2};
	TEST::test();
	TEST::some_const;

	return c;
}